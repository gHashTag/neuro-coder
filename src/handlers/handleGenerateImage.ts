import { InputFile } from "grammy/types"
import { pulse } from "../helpers"
import { generateImage } from "../helpers/generateReplicateImage"
import { MyContext } from "../utils/types"

export async function handleGenerateImage(ctx: MyContext, data: string, isRu: boolean) {
  if (!ctx || !ctx.from) {
    await ctx.reply(isRu ? "–û—à–∏–±–∫–∞ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è" : "User identification error")
    return
  }
  const prompt = data.replace("generate_image_", "")

  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
  const generatingMsg = await ctx.reply(isRu ? "‚è≥ –ì–µ–Ω–µ—Ä–∏—Ä—É—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ..." : "‚è≥ Generating image...")

  try {
    console.log("Generating image 2")
    const result = await generateImage(prompt, "sdxl", ctx.from.id)

    if (!result) {
      throw new Error("Failed to generate image")
    }

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    const photoToSend = Buffer.isBuffer(result.image) ? new InputFile(result.image) : result.image

    await ctx.replyWithPhoto(photoToSend)

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ pulse
    const pulseImage = Buffer.isBuffer(result.image) ? `data:image/jpeg;base64,${result.image.toString("base64")}` : result.image

    await pulse(ctx, pulseImage, prompt, "/sdxl")

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π
    await ctx.reply(isRu ? "–ß—Ç–æ –¥–∞–ª—å—à–µ?" : "What's next?", {
      reply_markup: {
        inline_keyboard: [
          [{ text: isRu ? "üîÑ –ü–æ–≤—Ç–æ—Ä–∏—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏—é" : "üîÑ Regenerate", callback_data: "retry" }],
          [{ text: isRu ? "‚¨ÜÔ∏è –£–ª—É—á—à–∏—Ç—å –ø—Ä–æ–º–ø—Ç" : "‚¨ÜÔ∏è Improve prompt", callback_data: "improve" }],
          [{ text: isRu ? "üé• –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –≤–∏–¥–µ–æ" : "üé• Generate video", callback_data: "video" }],
        ],
      },
    })
  } catch (error) {
    console.error("Error generating image:", error)
    await ctx.reply(
      isRu
        ? "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–ΩÔøΩÔøΩ—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        : "‚ùå An error occurred while generating the image. Please try again later.",
    )
  } finally {
    // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
    await ctx.api.deleteMessage(ctx.chat?.id || "", generatingMsg.message_id).catch(console.error)
  }
  return
}
