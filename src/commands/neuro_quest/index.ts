import { Conversation, ConversationFlavor } from "@grammyjs/conversations"
import { MyContext } from "../../utils/types"
import { InlineKeyboard } from "grammy"

type MyConversationType = MyContext & ConversationFlavor

async function neuroQuest(conversation: Conversation<MyConversationType>, ctx: MyConversationType) {
  const isRu = ctx.from?.language_code === "ru"
  console.log("üéÆ Starting Neuro Quest for user:", ctx.from?.id)

  // –®–∞–≥ 1: –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
  await ctx.reply(
    isRu
      ? "üéÆ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ù–µ–π—Ä–æ-–ö–≤–µ—Å—Ç!\n\n–Ø –ø–æ–º–æ–≥—É –≤–∞–º –æ—Å–≤–æ–∏—Ç—å –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ–π –∏–≥—Ä—ã. –ì–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å?"
      : "üéÆ Welcome to Neuro-Quest!\n\nI'll help you master all the bot's features in an exciting game format. Ready to start?",
    {
      reply_markup: new InlineKeyboard()
        .text(isRu ? "üöÄ –ù–∞—á–∞—Ç—å –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ" : "üöÄ Start adventure", "quest_start")
        .text(isRu ? "‚ùå –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å" : "‚ùå Skip", "quest_skip"),
    },
  )

  try {
    console.log("Waiting for start response...")
    const startResponse = await conversation.waitFor("callback_query:data")
    console.log("Received start response:", startResponse.callbackQuery.data)
    await ctx.api.answerCallbackQuery(startResponse.callbackQuery.id)

    if (startResponse.callbackQuery.data === "quest_skip") {
      console.log("User skipped the quest")
      await ctx.reply(isRu ? "üëã –í—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –∫–≤–µ—Å—Ç –∑–∞–Ω–æ–≤–æ –∫–æ–º–∞–Ω–¥–æ–π /start" : "üëã You can always restart the quest with /start command")
      return
    }

    // –®–∞–≥ 2: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    console.log("Starting image generation step")
    await ctx.reply(
      isRu
        ? "üé® –ü–µ—Ä–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ: –¥–∞–≤–∞–π—Ç–µ —Å–æ–∑–¥–∞–¥–∏–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ!\n\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /text_to_image –∏ –æ–ø–∏—à–∏—Ç–µ —á—Ç–æ-–Ω–∏–±—É–¥—å –ø—Ä–æ—Å—Ç–æ–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä '–∫–æ—Å–º–∏—á–µ—Å–∫–∏–π –∫–æ—Ç–∏–∫'"
        : "üé® First task: let's create an image!\n\nUse the /text_to_image command and describe something simple, like 'space cat'",
    )

    // –ü—Ä–æ—Å—Ç–æ –∂–¥–µ–º —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã
    let msg = await conversation.wait()
    while (!msg.message?.text?.startsWith("/text_to_image")) {
      msg = await conversation.wait()
    }
    console.log("Text to image command received")

    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É –ø–æ—Å–ª–µ –Ω–µ–±–æ–ª—å—à–æ–π –ø–∞—É–∑—ã
    await new Promise((resolve) => setTimeout(resolve, 2000))

    // –®–∞–≥ 3: –£–ª—É—á—à–µ–Ω–∏–µ –ø—Ä–æ–º–ø—Ç–∞
    await ctx.reply(
      isRu
        ? "‚ú® –ü–æ—Å–ª–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤—ã –º–æ–∂–µ—Ç–µ —É–ª—É—á—à–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –∏—Å–ø–æ–ª—å–∑—É—è –∫–Ω–æ–ø–∫—É '–£–ª—É—á—à–∏—Ç—å –ø—Ä–æ–º–ø—Ç' –ø–æ–¥ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º. –î–∞–≤–∞–π—Ç–µ –ø–µ—Ä–µ–π–¥–µ–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É."
        : "‚ú® After generating an image, you can improve the result using the 'Improve prompt' button under the image. Let's move to the next step.",
    )

    await new Promise((resolve) => setTimeout(resolve, 3000))

    // –®–∞–≥ 4: –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏–¥–µ–æ
    await ctx.reply(
      isRu
        ? "üé• –ò–∑ –ª—é–±–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –≤–∏–¥–µ–æ! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É '–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –≤–∏–¥–µ–æ' –ø–æ–¥ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º, –∫–æ–≥–¥–∞ –∑–∞—Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å –µ–≥–æ –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–º. –ò–¥–µ–º –¥–∞–ª—å—à–µ!"
        : "üé• You can create a video from any image! Use the 'Generate video' button under the image when you want to animate it. Let's continue!",
    )

    await new Promise((resolve) => setTimeout(resolve, 3000))

    // –®–∞–≥ 5: –û–±—â–µ–Ω–∏–µ —Å –ò–ò
    await ctx.reply(
      isRu
        ? "ü§ñ –Ø —Ç–∞–∫–∂–µ —É–º–µ—é –æ–±—â–∞—Ç—å—Å—è! –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å, –∏ —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –Ω–∞ –Ω–µ–≥–æ –æ—Ç–≤–µ—Ç–∏—Ç—å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å!"
        : "ü§ñ I can also chat! Just write me any question and I'll try to answer it. Try it now!",
    )

    // –ñ–¥–µ–º –ª—é–±–æ–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    msg = await conversation.wait()
    while (!msg.message?.text || msg.message.text.startsWith("/")) {
      msg = await conversation.wait()
    }
    console.log("Chat message received")

    // –®–∞–≥ 6: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞–∑–º–µ—Ä–∞
    await ctx.reply(
      isRu
        ? "‚öôÔ∏è –ò –ø–æ—Å–ª–µ–¥–Ω–µ–µ: –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —Ä–∞–∑–º–µ—Ä –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∫–æ–º–∞–Ω–¥–æ–π /imagesize. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ!"
        : "‚öôÔ∏è And lastly: you can configure the size of generated images with the /imagesize command. Try it!",
    )

    msg = await conversation.wait()
    while (!msg.message?.text?.startsWith("/imagesize")) {
      msg = await conversation.wait()
    }
    console.log("Imagesize command received")

    // –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∫–≤–µ—Å—Ç–∞
    await ctx.reply(
      isRu
        ? "üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã —É–∑–Ω–∞–ª–∏ –æ—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞!\n\n" +
            "‚Ä¢ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π (/text_to_image)\n" +
            "‚Ä¢ –£–ª—É—á—à–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤\n" +
            "‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏–¥–µ–æ\n" +
            "‚Ä¢ –û–±—â–µ–Ω–∏–µ —Å –ò–ò\n" +
            "‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ (/imagesize)\n\n" +
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥.\n" +
            "–£–¥–∞—á–∏ –≤ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–µ! üöÄ"
        : "üéâ Congratulations! You've learned the main features!\n\n" +
            "‚Ä¢ Image generation (/text_to_image)\n" +
            "‚Ä¢ Result improvement\n" +
            "‚Ä¢ Video creation\n" +
            "‚Ä¢ AI chat\n" +
            "‚Ä¢ Settings configuration (/imagesize)\n\n" +
            "Use /help to see all commands.\n" +
            "Good luck with your creations! üöÄ",
      {
        reply_markup: new InlineKeyboard()
          .text(isRu ? "üéÅ –ü–æ–ª—É—á–∏—Ç—å –±–æ–Ω—É—Å" : "üéÅ Get bonus", "quest_bonus")
          .text(isRu ? "üí´ –£–ª—É—á—à–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É" : "üí´ Upgrade subscription", "quest_upgrade"),
      },
    )
    console.log("Quest completed for user:", ctx.from?.id)
  } catch (error) {
    console.error("Quest error:", error)
    await ctx.reply(isRu ? "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –∫–≤–µ—Å—Ç–∞." : "An error occurred. Use /start to restart the quest.")
  }
}

export default neuroQuest
