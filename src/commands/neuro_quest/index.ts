import { InlineKeyboard } from "grammy"
import { MyContext, MyConversation } from "../../utils/types"
import { handleLevel1, handleLevel2, handleLevel3, handleLevel4, handleQuestComplete, handleQuestRules } from "./handlers"

export async function neuroQuest(conversation: MyConversation, ctx: MyContext) {
  const isRu = ctx.from?.language_code === "ru"
  console.log("üéÆ Starting Neuro Quest for user:", ctx.from?.id)

  // –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
  await ctx.replyWithPhoto("https://dmrooqbmxdhdyblqzswu.supabase.co/storage/v1/object/public/neuro_coder/bot/ava-16-9.jpg", {
    caption: isRu
      ? `üéÆ –ü—Ä–∏–≤–µ—Ç! –Ø –ù–µ–π—Ä–æ–ö–æ–¥–µ—Ä - –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è —Å–æ—Ü—Å–µ—Ç–µ–π.

ü§ñ –Ø –ø–æ–º–æ–≥—É –≤–∞–º —Å–æ–∑–¥–∞–≤–∞—Ç—å:
‚Ä¢ –í–∏—Ä—É—Å–Ω—ã–µ –ø–æ—Å—Ç—ã
‚Ä¢ –ö—Ä–µ–∞—Ç–∏–≤–Ω—ã–µ –≤–∏–¥–µ–æ
‚Ä¢ –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
‚Ä¢ –ü—Ä–æ–¥–∞—é—â–∏–µ —Ç–µ–∫—Å—Ç—ã
‚Ä¢ –û–∑–≤—É—á–∫—É –∏ —Å—É–±—Ç–∏—Ç—Ä—ã

üéØ –î–∞–≤–∞–π—Ç–µ –ø—Ä–æ–π–¥–µ–º –∫–≤–µ—Å—Ç –∏ –Ω–∞—É—á–∏–º—Å—è:

1Ô∏è‚É£ –ë–∞–∑–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
‚Ä¢ –í—ã–±–æ—Ä –º–æ–¥–µ–ª–∏ –ò–ò –¥–ª—è –≤–∞—à–µ–≥–æ —Å—Ç–∏–ª—è
‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —è–∑—ã–∫–∞ –∏ —Ñ–æ—Ä–º–∞—Ç–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–æ–π

2Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
‚Ä¢ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç—Ä–µ–Ω–¥–æ–≤—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∞—Ä—Ç–æ–≤
‚Ä¢ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ –≤ –≤–∞—à–µ–º —Å—Ç–∏–ª–µ

3Ô∏è‚É£ –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è —Ä–∞–±–æ—Ç–∞ —Å –≤–∏–¥–µ–æ
‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ —Ä–∏–ª—Å –∏ —à–æ—Ä—Ç—Å
‚Ä¢ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —ç—Ñ—Ñ–µ–∫—Ç–æ–≤ –¥–≤–∏–∂–µ–Ω–∏—è
‚Ä¢ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è B-roll –∫–æ–Ω—Ç–µ–Ω—Ç–∞
‚Ä¢ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –≥—É–± —Å –∞—É–¥–∏–æ

4Ô∏è‚É£ –ê—É–¥–∏–æ –∏ —Ç–µ–∫—Å—Ç
‚Ä¢ –û–∑–≤—É—á–∫–∞ –ø–æ—Å—Ç–æ–≤
‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ —Å—É–±—Ç–∏—Ç—Ä–æ–≤
‚Ä¢ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—Ä–æ–¥–∞—é—â–∏—Ö —Ç–µ–∫—Å—Ç–æ–≤

üí° –ö–∞–∂–¥—ã–π —É—Ä–æ–≤–µ–Ω—å –¥–∞—Å—Ç –≤–∞–º –Ω–∞–≤—ã–∫–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞.

–ì–æ—Ç–æ–≤—ã —Å—Ç–∞—Ç—å –ø—Ä–æ—Ñ–∏ –≤ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞?`
      : `üëã Hi! I'm NeuroCoder - your personal assistant for social media content creation.

ü§ñ I'll help you create:
‚Ä¢ Viral posts
‚Ä¢ Creative videos
‚Ä¢ Unique images
‚Ä¢ Sales copy
‚Ä¢ Voiceovers and subtitles

üéØ Let's complete this quest and learn:

1Ô∏è‚É£ Basic Setup
‚Ä¢ Choosing AI model for your style
‚Ä¢ Setting language and content format
‚Ä¢ Managing subscription

2Ô∏è‚É£ Visual Content Creation
‚Ä¢ Generating trending images
‚Ä¢ Creating unique art
‚Ä¢ Processing photos in your style

3Ô∏è‚É£ Advanced Video Work
‚Ä¢ Creating reels and shorts
‚Ä¢ Adding motion effects
‚Ä¢ Generating B-roll content
‚Ä¢ Lip sync with audio

4Ô∏è‚É£ Audio and Text
‚Ä¢ Post voiceovers
‚Ä¢ Creating subtitles
‚Ä¢ Generating sales copy

üí° Each level will give you skills for creating professional content.

Ready to become a content creation pro?`,
    reply_markup: new InlineKeyboard()
      .text(isRu ? "üéÆ –ù–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ" : "üéÆ Start learning", "quest_start")
      .row()
      .text(isRu ? "üíé –ö—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É" : "üíé Buy subscription", "buy_subscription"),
  })

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  while (true) {
    const response = await conversation.waitFor("callback_query:data")
    await ctx.api.answerCallbackQuery(response.callbackQuery.id)

    const action = response.callbackQuery.data

    switch (action) {
      case "quest_rules":
        await handleQuestRules(ctx)
        break
      case "level_2":
        await handleLevel2(ctx)
        break
      case "level_3":
        await handleLevel3(ctx)
        break
      case "level_4":
        await handleLevel4(ctx)
        break
      case "quest_complete":
        await handleQuestComplete(ctx)
        return
      case "buy_subscription":
        await ctx.conversation.enter("buySubscription")
        return
      case "quest_start":
      default:
        await handleLevel1(ctx)
        break
    }
  }
}

export default neuroQuest
