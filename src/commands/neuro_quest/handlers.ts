import { MyContext } from "../../utils/types"
import { InlineKeyboard } from "grammy"

export async function handleLevel1(ctx: MyContext) {
  const isRu = ctx.from?.language_code === "ru"

  await ctx.reply(
    isRu
      ? `üéØ –£—Ä–æ–≤–µ–Ω—å 1: –û—Å–Ω–æ–≤—ã —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º

–î–∞–≤–∞–π—Ç–µ –Ω–∞—á–Ω–µ–º —Å –±–∞–∑–æ–≤—ã—Ö –∫–æ–º–∞–Ω–¥:

1. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –æ–±–∑–æ—Ä –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥
2. –í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å –ò–ò –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º —Å –ø–æ–º–æ—â—å—é /select_model
3. –ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ –¥—Ä—É–≥–∞ –∫–æ–º–∞–Ω–¥–æ–π /invite –∏ –ø–æ–ª—É—á–∏—Ç–µ –±–æ–Ω—É—Å
`
      : `üéØ Level 1: Bot Basics

Let's start with basic commands:

1. Use /start to see all available commands
2. Choose a AI model using /select_model
3. Invite a friend with /invite command and get a bonus
`,
    {
      reply_markup: new InlineKeyboard().text(isRu ? "‚û°Ô∏è –î–∞–ª–µ–µ" : "‚û°Ô∏è Next", "level_2"),
    },
  )
}

export async function handleLevel2(ctx: MyContext) {
  const isRu = ctx.from?.language_code === "ru"

  await ctx.reply(
    isRu
      ? `üé® –£—Ä–æ–≤–µ–Ω—å 2: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π

–¢–µ–ø–µ—Ä—å –Ω–∞—É—á–∏–º—Å—è —Å–æ–∑–¥–∞–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:

1. /text_to_image - —Å–æ–∑–¥–∞–π—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ —Ç–µ–∫—Å—Ç–∞
2. /image_to_prompt - –ø–æ–ª—É—á–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
3. /train_flux_model - –æ–±—É—á–∏—Ç–µ —Å–≤–æ—é –º–æ–¥–µ–ª—å
4. /neuro_photo - —Å–æ–∑–¥–∞–π—Ç–µ —Ñ–æ—Ç–æ—Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ`
      : `üé® Level 2: Image Generation

Now let's learn to create images:

1. /text_to_image - create an image from text
2. /image_to_prompt - get image description
3. /train_flux_model - train your own model
4. /neuro_photo - create photorealistic images`,
    {
      reply_markup: new InlineKeyboard().text(isRu ? "‚û°Ô∏è –î–∞–ª–µ–µ" : "‚û°Ô∏è Next", "level_3"),
    },
  )
}

export async function handleLevel3(ctx: MyContext) {
  const isRu = ctx.from?.language_code === "ru"

  await ctx.reply(
    isRu
      ? `üé• –£—Ä–æ–≤–µ–Ω—å 3: –†–∞–±–æ—Ç–∞ —Å –≤–∏–¥–µ–æ

–°–æ–∑–¥–∞–¥–∏–º –ø–æ—Ç—Ä—è—Å–∞—é—â–∏–µ –≤–∏–¥–µ–æ:

1. /text_to_video - —Å–æ–∑–¥–∞–π—Ç–µ –≤–∏–¥–µ–æ –∏–∑ —Ç–µ–∫—Å—Ç–∞
2. /image_to_video - –ø—Ä–µ–æ–±—Ä–∞–∑—É–π—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –≤–∏–¥–µ–æ
3. /b_roll - —Å–æ–∑–¥–∞–π—Ç–µ B-roll –≤–∏–¥–µ–æ
4. /lipsync - —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–π—Ç–µ –¥–≤–∏–∂–µ–Ω–∏–µ –≥—É–±
5. /subtitles - –¥–æ–±–∞–≤—å—Ç–µ —Å—É–±—Ç–∏—Ç—Ä—ã`
      : `üé• Level 3: Video Creation

Let's create amazing videos:

1. /text_to_video - create video from text
2. /image_to_video - convert image to video
3. /b_roll - create B-roll video
4. /lipsync - synchronize lip movements
5. /subtitles - add subtitles`,
    {
      reply_markup: new InlineKeyboard().text(isRu ? "‚û°Ô∏è –î–∞–ª–µ–µ" : "‚û°Ô∏è Next", "level_4"),
    },
  )
}

export async function handleLevel4(ctx: MyContext) {
  const isRu = ctx.from?.language_code === "ru"

  await ctx.reply(
    isRu
      ? `üé§ –£—Ä–æ–≤–µ–Ω—å 4: –ê—É–¥–∏–æ –∏ –≥–æ–ª–æ—Å

–§–∏–Ω–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å - —Ä–∞–±–æ—Ç–∞ —Å –≥–æ–ª–æ—Å–æ–º:

1. /text_to_speech - –ø—Ä–µ–æ–±—Ä–∞–∑—É–π—Ç–µ —Ç–µ–∫—Å—Ç –≤ —Ä–µ—á—å
2. /voice - –¥–æ–±–∞–≤—å—Ç–µ –≥–æ–ª–æ—Å –∫ –∞–≤–∞—Ç–∞—Ä—É
3. /avatar - —Å–æ–∑–¥–∞–π—Ç–µ —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ –∞–≤–∞—Ç–∞—Ä–∞`
      : `üé§ Level 4: Audio and Voice

Final level - working with voice:

1. /text_to_speech - convert text to speech
2. /voice - add voice to avatar`,
    {
      reply_markup: new InlineKeyboard().text(isRu ? "üéâ –ó–∞–≤–µ—Ä—à–∏—Ç—å" : "üéâ Complete", "quest_complete"),
    },
  )
}

export async function handleQuestComplete(ctx: MyContext) {
  const isRu = ctx.from?.language_code === "ru"

  await ctx.reply(
    isRu
      ? `üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –ø—Ä–æ—à–ª–∏ –≤—Å–µ —É—Ä–æ–≤–Ω–∏ –ù–µ–π—Ä–æ–ö–≤–µ—Å—Ç–∞!

–¢–µ–ø–µ—Ä—å –≤—ã –∑–Ω–∞–µ—Ç–µ –≤—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞. –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –∏ —Å–æ–∑–¥–∞–≤–∞—Ç—å —É–¥–∏–≤–∏—Ç–µ–ª—å–Ω—ã–µ –≤–µ—â–∏!

–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /buy —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ —Ñ—É–Ω–∫—Ü–∏—è–º –±–æ—Ç–∞.`
      : `üéâ Congratulations! You've completed all NeuroQuest levels!

Now you know all the main features of the bot. Keep experimenting and creating amazing things!

Use /buy to get extended access to bot features.`,
  )
}

export async function handleQuestRules(ctx: MyContext) {
  const isRu = ctx.from?.language_code === "ru"

  await ctx.reply(
    isRu
      ? `üìú –ü—Ä–∞–≤–∏–ª–∞ –ù–µ–π—Ä–æ–ö–≤–µ—Å—Ç–∞:

1. –í—ã–ø–æ–ª–Ω—è–π—Ç–µ –∑–∞–¥–∞–Ω–∏—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ
2. –ó–∞ –∫–∞–∂–¥–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –æ—á–∫–∏
3. –ß–µ–º –±–æ–ª—å—à–µ –æ—á–∫–æ–≤ - —Ç–µ–º –≤—ã—à–µ –≤–∞—à —É—Ä–æ–≤–µ–Ω—å
4. –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∑–∞–¥–∞–Ω–∏—è –∏–º–µ—é—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –ø–æ –≤—Ä–µ–º–µ–Ω–∏
5. –ó–∞ –æ—Å–æ–±—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –±–æ–Ω—É—Å—ã

–£–¥–∞—á–∏ –≤ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–∏! üçÄ`
      : `üìú NeuroQuest Rules:

1. Complete tasks sequentially
2. You get points for each completed task
3. The more points - the higher your level
4. Some tasks have time limits
5. You get bonuses for special achievements

Good luck! üçÄ`,
  )
}
