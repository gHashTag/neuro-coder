import { Scenes, Markup } from "telegraf"
import { MyContext } from "../../interfaces"
import { getUserBalance, sendBalanceMessage, sendInsufficientStarsMessage, textToImageGenerationCost } from "../../helpers/telegramStars/telegramStars"
import { isRussian } from "../../utils/language"
import { generateImage } from "services/generateReplicateImage"

export const textPromptToImageWizard = new Scenes.WizardScene<MyContext>(
  "textPromptToImageWizard",
  async (ctx) => {
    const isRu = isRussian(ctx)
    console.log("CASE: textPromptToImageCommand")

    if (!ctx.from || !ctx.from.id || !ctx.chat?.id) {
      await ctx.reply(isRu ? "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞" : "‚ùå An error occurred")
      return ctx.scene.leave()
    }

    const currentBalance = await getUserBalance(ctx.from.id)
    const price = textToImageGenerationCost
    if (currentBalance < price) {
      await sendInsufficientStarsMessage(ctx, isRu)
      return ctx.scene.leave()
    }

    await sendBalanceMessage(currentBalance, textToImageGenerationCost, ctx, isRu)

    const keyboard = Markup.keyboard([[Markup.button.text(isRu ? "–û—Ç–º–µ–Ω–∏—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏—é" : "Cancel generation")]]).resize()

    await ctx.reply(isRu ? "üëã –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–º–ø—Ç –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è." : "üëã Hello! Write a prompt in English to generate an image.", {
      reply_markup: keyboard.reply_markup,
    })

    return ctx.wizard.next()
  },
  async (ctx) => {
    const isRu = isRussian(ctx)
    const message = ctx.message

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    if (message && "text" in message) {
      const text = message.text

      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—Ç–º–µ–Ω—É –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
      if (text === (isRu ? "–û—Ç–º–µ–Ω–∏—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏—é" : "Cancel generation")) {
        await ctx.reply(isRu ? "‚ùå –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞" : "‚ùå Generation cancelled")
        return ctx.scene.leave()
      }

      console.log(text, "text")

      // –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –≤—ã–∑–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
      if (!ctx.from?.id) {
        await ctx.reply(isRu ? "‚ùå –ù–µ—Ç ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è" : "‚ùå No user id")
        return ctx.scene.leave()
      }

      ctx.session.prompt = text
      ctx.session.mode = "generate_image"
      await generateImage(text, ctx.session.selectedModel || "", 1, ctx.from.id, isRu, ctx)

      return ctx.scene.leave()
    }

    await ctx.reply(isRu ? "‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ø—Ä–æ–º–ø—Ç" : "‚ùå Invalid prompt")
    return ctx.scene.leave()
  },
)

export default textPromptToImageWizard
